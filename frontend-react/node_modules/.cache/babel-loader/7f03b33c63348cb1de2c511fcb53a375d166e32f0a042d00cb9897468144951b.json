{"ast":null,"code":"var _jsxFileName = \"/home/diaraz/Desktop/transcendence/frontend/src/components/Tournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Tournament.css';\nimport PlayerRegistration from './PlayerRegistration';\nimport MatchDisplay from './MatchDisplay';\nimport NextMatch from './NextMatch';\nimport ScoreTracker from './ScoreTracker';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tournament() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTournamentStarted, setIsTournamentStarted] = useState(false);\n  const [matchQueue, setMatchQueue] = useState([]);\n  const [scores, setScores] = useState({}); // Initialize score state\n\n  const addPlayer = alias => {\n    setPlayers([...players, alias]);\n    setScores(prevScores => ({\n      ...prevScores,\n      [alias]: 0 // Set initial score to 0 for each player\n    }));\n  };\n\n  /* const startTournament = () => {\n    if (players.length > 1) {\n      setIsTournamentStarted(true);\n      const generatedQueue = generateMatches();\n      setMatchQueue(generatedQueue);\n      setCurrentMatch(generatedQueue[0]);\n    } else {\n      alert('At least two players are required to start the tournament.');\n    }\n  }; */\n\n  const [error, setError] = useState(''); // To track and display errors\n\n  const startTournament = () => {\n    if (players.length > 1) {\n      setIsTournamentStarted(true);\n      const generatedQueue = generateMatches();\n      setMatchQueue(generatedQueue);\n      setCurrentMatch(generatedQueue[0]);\n      setError(''); // Clear any previous errors\n    } else {\n      setError('At least two players are required to start the tournament.');\n    }\n  };\n  const generateMatches = () => {\n    const queue = [];\n    for (let i = 0; i < players.length - 1; i++) {\n      for (let j = i + 1; j < players.length; j++) {\n        queue.push(`${players[i]} vs ${players[j]}`);\n      }\n    }\n    return queue;\n  };\n  const handleNextMatch = () => {\n    const nextQueue = matchQueue.slice(1);\n    setMatchQueue(nextQueue);\n    setCurrentMatch(nextQueue[0] || 'No more matches scheduled.');\n  };\n  const updateScore = winner => {\n    setScores(prevScores => ({\n      ...prevScores,\n      [winner]: prevScores[winner] + 1 // Increment winner's score\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournament-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"profileH2\",\n      children: \"Tournament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !isTournamentStarted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlayerRegistration, {\n        addPlayer: addPlayer,\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: startTournament,\n        children: \"Start Tournament\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MatchDisplay, {\n        match: currentMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextMatch, {\n        currentMatch: currentMatch,\n        onNextMatch: handleNextMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScoreTracker, {\n        scores: scores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatchQueue, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"/UeVTrjLu402+Eqxi5LYtecs+Aw=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","PlayerRegistration","MatchDisplay","NextMatch","ScoreTracker","jsxDEV","_jsxDEV","Fragment","_Fragment","Tournament","_s","players","setPlayers","currentMatch","setCurrentMatch","isTournamentStarted","setIsTournamentStarted","matchQueue","setMatchQueue","scores","setScores","addPlayer","alias","prevScores","error","setError","startTournament","length","generatedQueue","generateMatches","queue","i","j","push","handleNextMatch","nextQueue","slice","updateScore","winner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","match","onNextMatch","MatchQueue","_c","$RefreshReg$"],"sources":["/home/diaraz/Desktop/transcendence/frontend/src/components/Tournament.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Tournament.css';\nimport PlayerRegistration from './PlayerRegistration';\nimport MatchDisplay from './MatchDisplay';\nimport NextMatch from './NextMatch';\nimport ScoreTracker from './ScoreTracker';\n\nfunction Tournament() {\n  const [players, setPlayers] = useState([]);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [isTournamentStarted, setIsTournamentStarted] = useState(false);\n  const [matchQueue, setMatchQueue] = useState([]);\n  const [scores, setScores] = useState({}); // Initialize score state\n\n  const addPlayer = (alias) => {\n    setPlayers([...players, alias]);\n    setScores((prevScores) => ({\n      ...prevScores,\n      [alias]: 0 // Set initial score to 0 for each player\n    }));\n  };\n\n  /* const startTournament = () => {\n    if (players.length > 1) {\n      setIsTournamentStarted(true);\n      const generatedQueue = generateMatches();\n      setMatchQueue(generatedQueue);\n      setCurrentMatch(generatedQueue[0]);\n    } else {\n      alert('At least two players are required to start the tournament.');\n    }\n  }; */\n\nconst [error, setError] = useState(''); // To track and display errors\n\nconst startTournament = () => {\n  if (players.length > 1) {\n    setIsTournamentStarted(true);\n    const generatedQueue = generateMatches();\n    setMatchQueue(generatedQueue);\n    setCurrentMatch(generatedQueue[0]);\n    setError(''); // Clear any previous errors\n  } else {\n    setError('At least two players are required to start the tournament.');\n  }\n};\n\n\n  const generateMatches = () => {\n    const queue = [];\n    for (let i = 0; i < players.length - 1; i++) {\n      for (let j = i + 1; j < players.length; j++) {\n        queue.push(`${players[i]} vs ${players[j]}`);\n      }\n    }\n    return queue;\n  };\n\n  const handleNextMatch = () => {\n    const nextQueue = matchQueue.slice(1);\n    setMatchQueue(nextQueue);\n    setCurrentMatch(nextQueue[0] || 'No more matches scheduled.');\n  };\n\n  const updateScore = (winner) => {\n    setScores((prevScores) => ({\n      ...prevScores,\n      [winner]: prevScores[winner] + 1 // Increment winner's score\n    }));\n  };\n\n  return (\n    <div className=\"tournament-container\">\n      <h1 className=\"profileH2\">Tournament</h1>\n      {!isTournamentStarted ? (\n        <>\n          <PlayerRegistration addPlayer={addPlayer} players={players} />\n          <button className=\"start-button\" onClick={startTournament}>\n            Start Tournament\n          </button>\n          {error && <p className=\"error-message\">{error}</p>}\n        </>\n      ) : (\n        <>\n          <MatchDisplay match={currentMatch} />\n          <NextMatch currentMatch={currentMatch} onNextMatch={handleNextMatch} />\n          <ScoreTracker scores={scores} />\n          {/* <div className=\"match-queue\">\n            <h3>Upcoming Matches</h3>\n            {matchQueue.length > 1 ? (\n              <ul>\n                {matchQueue.slice(1).map((match, index) => (\n                  <li key={index}>{match}</li>\n                ))}\n              </ul>\n            ) : (\n              <p>No more matches scheduled.</p>\n            )}\n          </div> */}\n          <MatchQueue />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Tournament;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}