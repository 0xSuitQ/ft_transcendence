{"ast":null,"code":"var _jsxFileName = \"/home/diaraz/Desktop/transcendence/frontend/src/components/PlayerRegistration.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from 'react';\n\nfunction PlayerRegistration({ addPlayer, players }) {\n  const [alias, setAlias] = useState('');\n\n  const handleAddPlayer = () => {\n    if (alias && !players.includes(alias)) {\n      addPlayer(alias);\n      setAlias('');\n    } else {\n      alert('Alias cannot be empty or already registered.');\n    }\n  };\n\n  return (\n    <div className=\"player-registration\">\n      <h2>Player Registration</h2>\n      <input \n        type=\"text\" \n        value={alias} \n        onChange={(e) => setAlias(e.target.value)} \n        placeholder=\"Enter alias\" \n      />\n      <button onClick={handleAddPlayer} >Add Player</button>\n      <ul>\n        {players.map((player, index) => (\n          <li key={index}>{player}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default PlayerRegistration;\n */\n\nimport React, { useState } from 'react';\nimport '.PlayerRegistration.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerRegistration({\n  addPlayer,\n  players\n}) {\n  _s();\n  const [alias, setAlias] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleAddPlayer = () => {\n    if (alias && !players.includes(alias)) {\n      addPlayer(alias);\n      setAlias('');\n      setErrorMessage(''); // Clear any previous error message\n    } else {\n      setErrorMessage('Alias cannot be empty or already registered.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-registration\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: alias,\n        onChange: e => setAlias(e.target.value),\n        placeholder: \"Enter alias\",\n        className: \"alias-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPlayer,\n        className: \"add-button\",\n        children: \"Add Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"player-list\",\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"player-item\",\n        children: player\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerRegistration, \"7zZ0FzvNtUrwW9FPFAn3B/jK1lg=\");\n_c = PlayerRegistration;\nexport default PlayerRegistration;\nvar _c;\n$RefreshReg$(_c, \"PlayerRegistration\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlayerRegistration","addPlayer","players","_s","alias","setAlias","errorMessage","setErrorMessage","handleAddPlayer","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","player","index","_c","$RefreshReg$"],"sources":["/home/diaraz/Desktop/transcendence/frontend/src/components/PlayerRegistration.js"],"sourcesContent":["/* import React, { useState } from 'react';\n\nfunction PlayerRegistration({ addPlayer, players }) {\n  const [alias, setAlias] = useState('');\n\n  const handleAddPlayer = () => {\n    if (alias && !players.includes(alias)) {\n      addPlayer(alias);\n      setAlias('');\n    } else {\n      alert('Alias cannot be empty or already registered.');\n    }\n  };\n\n  return (\n    <div className=\"player-registration\">\n      <h2>Player Registration</h2>\n      <input \n        type=\"text\" \n        value={alias} \n        onChange={(e) => setAlias(e.target.value)} \n        placeholder=\"Enter alias\" \n      />\n      <button onClick={handleAddPlayer} >Add Player</button>\n      <ul>\n        {players.map((player, index) => (\n          <li key={index}>{player}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default PlayerRegistration;\n */\n\nimport React, { useState } from 'react';\nimport '.PlayerRegistration.css'\n\nfunction PlayerRegistration({ addPlayer, players }) {\n  const [alias, setAlias] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleAddPlayer = () => {\n    if (alias && !players.includes(alias)) {\n      addPlayer(alias);\n      setAlias('');\n      setErrorMessage(''); // Clear any previous error message\n    } else {\n      setErrorMessage('Alias cannot be empty or already registered.');\n    }\n  };\n\n  return (\n    <div className=\"player-registration\">\n      <h2>Player Registration</h2>\n      <div className=\"input-group\">\n        <input \n          type=\"text\" \n          value={alias} \n          onChange={(e) => setAlias(e.target.value)} \n          placeholder=\"Enter alias\" \n          className=\"alias-input\"\n        />\n        <button onClick={handleAddPlayer} className=\"add-button\">Add Player</button>\n      </div>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <ul className=\"player-list\">\n        {players.map((player, index) => (\n          <li key={index} className=\"player-item\">{player}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default PlayerRegistration;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,kBAAkBA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIJ,KAAK,IAAI,CAACF,OAAO,CAACO,QAAQ,CAACL,KAAK,CAAC,EAAE;MACrCH,SAAS,CAACG,KAAK,CAAC;MAChBC,QAAQ,CAAC,EAAE,CAAC;MACZE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAAC,8CAA8C,CAAC;IACjE;EACF,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BZ,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEb,KAAM;QACbc,QAAQ,EAAGC,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC,aAAa;QACzBX,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFhB,OAAA;QAAQuB,OAAO,EAAEd,eAAgB;QAACE,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,EACLT,YAAY,iBAAIP,OAAA;MAAGW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChEhB,OAAA;MAAIW,SAAS,EAAC,aAAa;MAAAC,QAAA,EACxBT,OAAO,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB1B,OAAA;QAAgBW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEa;MAAM,GAAtCC,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CAnCQH,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAqC3B,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}